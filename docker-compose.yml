version: "3.8"

name: microservices-demo
services:
  postgres:
    container_name: postgres_microservices_demo
    image: postgres:15.1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - msl-postgresql:/var/lib/postgresql/data
      - ./docker/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    ports:
      - 127.0.0.1:5432:5432
    env_file:
      - ./docker/.env

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - msl-zookeeper-data:/var/lib/zookeeper/data
      - msl-zookeeper-logs:/var/lib/zookeeper/log
    ports:
      - 2181:2181
    env_file:
      - ./docker/.env

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092, PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - msl-kafka-data:/var/lib/kafka/data
    env_file:
      - ./docker/.env

  localstack:
    container_name: localstack_microservices_demo
    image: localstack/localstack
    ports:
      - 127.0.0.1:4566:4566            # LocalStack Gateway
      - 127.0.0.1:4510-4559:4510-4559  # external services port range
    environment:
      - DEBUG=${DEBUG-}
      - LAMBDA_EXECUTOR=docker-reuse
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - msl-localstack:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./docker/.env

  resource-service:
    image: akalji/resource-service
    build:
      context: backend
      dockerfile: ./resource-service/Dockerfile

  song-service:
    image: akalji/song-service
    build:
      context: backend
      dockerfile: ./song-service/Dockerfile

  resource-processing-service:
    image: akalji/resource-processing-service
    build:
      context: backend
      dockerfile: ./resource-processing-service/Dockerfile

volumes:
  msl-localstack:
  msl-postgresql:
  msl-zookeeper-data:
  msl-zookeeper-logs:
  msl-kafka-data: