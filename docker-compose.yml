version: "3.8"

name: microservices-demo
services:
  postgres:
    container_name: postgres_microservices_demo
    image: postgres:15.1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - msl-postgresql:/var/lib/postgresql/data
      - ./docker/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    ports:
      - 127.0.0.1:5432:5432
    env_file:
      - ./docker/.env
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - msl-rabbitmq-data:/var/lib/rabbitmq/
      - msl-rabbitmq-log:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    env_file:
      - ./docker/.env
    restart: unless-stopped

  localstack:
    container_name: localstack_microservices_demo
    image: localstack/localstack
    ports:
      - 127.0.0.1:4566:4566            # LocalStack Gateway
      - 127.0.0.1:4510-4559:4510-4559  # external services port range
    environment:
      - DEBUG=${DEBUG-}
      - LAMBDA_EXECUTOR=docker-reuse
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - msl-localstack:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/s3create.sh:/etc/localstack/init/ready.d/init-aws.sh
    env_file:
      - ./docker/.env
    restart: unless-stopped

#  resource-service:
#    depends_on:
#      - kafka
#      - postgres
#    image: akalji/resource-service
#    build:
#      context: backend
#      dockerfile: ./resource-service/Dockerfile
#    restart: unless-stopped

#  song-service:
#    depends_on:
#      - postgres
#    image: akalji/song-service
#    build:
#      context: backend
#      dockerfile: ./song-service/Dockerfile
#    restart: unless-stopped
#
#  resource-processing-service:
#    depends_on:
#      - kafka
#      - postgres
#    image: akalji/resource-processing-service
#    build:
#      context: backend
#      dockerfile: ./resource-processing-service/Dockerfile
#    restart: unless-stopped
#
#  keycloak:
#    depends_on:
#      - postgres
#    container_name: keycloak
#    environment:
#      DB_VENDOR: postgres
#      DB_ADDR: ${POSTGRESQL_ADDRES}
#      DB_DATABASE: ${POSTGRESQL_DB}
#      DB_USER: ${POSTGRESQL_USER}
#      DB_PASSWORD: ${POSTGRESQL_PASS}
#      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USERNAME}
#      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
#    image: quay.io/keycloak/keycloak:latest
#    volumes:
#        - msl-keycloak:/opt/keycloak/data/
#    restart: unless-stopped

volumes:
  msl-localstack:
  msl-postgresql:
  msl-rabbitmq-data:
  msl-rabbitmq-log:
  msl-keycloak: